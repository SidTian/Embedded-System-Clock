#include <Arduino.h>
// a25,b26,c27,d32,e33,f12,g13
// 定义段引脚 (a-g)
int segPins[] = {25, 26, 27, 32, 33, 12, 13}; // a, b, c, d, e, f, g

const int digit1Pin = 16; // 个位 (D3)
const int digit2Pin = 17; // 十位 (D2)
const int buttonPin = 34; // 按钮引脚 (支持 ADC 的 GPIO 34)

void setup()
{
  // 设置段引脚为输出
  for (int i = 0; i < 7; i++)
  {
    pinMode(segPins[i], OUTPUT);
  }
  pinMode(digit1Pin, OUTPUT);
  pinMode(digit2Pin, OUTPUT);
  digitalWrite(digit1Pin, HIGH);
  digitalWrite(digit2Pin, HIGH);

  // 设置按钮引脚为输入
  pinMode(buttonPin, INPUT);

  // 调试用：初始化串口
  Serial.begin(115200);
  delay(1000); // 等待串口稳定
  Serial.println("Serial Test OK");
}

void clear()
{
  for (int i = 0; i < 7; i++)
    digitalWrite(segPins[i], 0);
}

// 显示指定数字
void displayNumber(int num)
{
  clear();
  if (num == 0)
  {
    digitalWrite(25, 1);
    digitalWrite(26, 1);
    digitalWrite(27, 1);
    digitalWrite(32, 1);
    digitalWrite(33, 1);
    digitalWrite(12, 1);
  }
  else if (num == 1)
  {
    digitalWrite(26, 1);
    digitalWrite(27, 1);
  }
  else if (num == 2)
  {
    digitalWrite(25, 1);
    digitalWrite(26, 1);
    digitalWrite(13, 1);
    digitalWrite(32, 1);
    digitalWrite(33, 1);
  }
  else if (num == 3)
  {
    digitalWrite(25, 1);
    digitalWrite(26, 1);
    digitalWrite(27, 1);
    digitalWrite(32, 1);
    digitalWrite(13, 1);
  }
  else if (num == 4)
  {
    digitalWrite(26, 1);
    digitalWrite(27, 1);
    digitalWrite(12, 1);
    digitalWrite(13, 1);
  }
  else if (num == 5)
  {
    digitalWrite(25, 1);
    digitalWrite(27, 1);
    digitalWrite(32, 1);
    digitalWrite(12, 1);
    digitalWrite(13, 1);
  }
  else if (num == 6)
  {
    digitalWrite(25, 1);
    digitalWrite(27, 1);
    digitalWrite(32, 1);
    digitalWrite(33, 1);
    digitalWrite(12, 1);
    digitalWrite(13, 1);
  }
  else if (num == 7)
  {
    digitalWrite(25, 1);
    digitalWrite(26, 1);
    digitalWrite(27, 1);
  }
  else if (num == 8)
  {
    digitalWrite(25, 1);
    digitalWrite(26, 1);
    digitalWrite(27, 1);
    digitalWrite(32, 1);
    digitalWrite(33, 1);
    digitalWrite(12, 1);
    digitalWrite(13, 1);
  }
  else if (num == 9)
  {
    digitalWrite(25, 1);
    digitalWrite(26, 1);
    digitalWrite(27, 1);
    digitalWrite(12, 1);
    digitalWrite(13, 1);
  }
}

void displayDigit(int digitPin, int number)
{
  displayNumber(number);
  // 激活指定的公共引脚 (共阴极 LOW 激活)
  digitalWrite(digit1Pin, digitPin == digit1Pin ? LOW : HIGH);
  digitalWrite(digit2Pin, digitPin == digit2Pin ? LOW : HIGH);
}

// 增加两位数的函数
void incrementNumber(int &digit1, int &digit2)
{
  digit1 += 1;
  if (digit1 >= 10)
  {
    digit2 += 1;
    digit1 = 0;
  }
  if (digit2 >= 10)
    digit2 = 0;
}

void loop()
{
  static int digit1 = 0;
  static int digit2 = 0;
  static int lastButtonState = 1;            // 上一次按钮状态
  static unsigned long lastDisplayTime = 0;  // 上一次刷新时间
  static int currentDigit = 0;               // 当前显示的位 (0 或 1)
  const unsigned long displayInterval = 3;   // 每位显示 1ms
  unsigned long currentTime = millis();


  // 按钮检测与消抖
  int buttonVoltage = analogRead(buttonPin);        // 读取 0-4095 的电压值
  int buttonState = (buttonVoltage < 500) ? 0 : 1; // 电压低于某个阈值（例如 500）视为按下


  // 检测按钮状态变化并记录时间
  if (buttonState != lastButtonState)
  {
    incrementNumber(digit1, digit2);
    lastButtonState = buttonState; // 更新 lastButtonState
  }

  // 多路复用显示（非阻塞）
  if (currentTime - lastDisplayTime >= displayInterval)
  {
    if (currentDigit == 0)
    {
      displayDigit(digit1Pin, digit1); // 显示个位
      currentDigit = 1;
    }
    else
    {
      displayDigit(digit2Pin, digit2); // 显示十位
      currentDigit = 0;
    }
    lastDisplayTime = currentTime;
  }
}